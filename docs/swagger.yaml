basePath: /
definitions:
  authctrl.loginRes:
    properties:
      access_token:
        type: string
      name:
        type: string
      refresh_token:
        type: string
      user_id:
        type: string
    required:
    - access_token
    - name
    - refresh_token
    - user_id
    type: object
  authctrl.logoutTokenReq:
    properties:
      refresh_token:
        type: string
    required:
    - refresh_token
    type: object
  authctrl.oauthLoginReq:
    properties:
      token:
        type: string
    required:
    - token
    type: object
  authctrl.refreshTokenReq:
    properties:
      refresh_token:
        type: string
    required:
    - refresh_token
    type: object
  authctrl.refreshTokenRes:
    properties:
      access_token:
        type: string
      refresh_token:
        type: string
    required:
    - access_token
    - refresh_token
    type: object
  categoryctrl.categoryDTO:
    properties:
      id:
        type: string
      name:
        type: string
      order:
        minimum: 0
        type: integer
      subjects:
        items:
          $ref: '#/definitions/subjectctrl.SubjectDTO'
        type: array
    required:
    - id
    - name
    - order
    - subjects
    type: object
  categoryctrl.categoryOrderElement:
    properties:
      category_id:
        type: string
      order:
        minimum: 0
        type: integer
    required:
    - category_id
    - order
    type: object
  categoryctrl.createCategoryBatchReq:
    properties:
      category_list:
        items:
          type: string
        type: array
    required:
    - category_list
    type: object
  categoryctrl.createCategoryReq:
    properties:
      name:
        example: name between 1 and 20
        type: string
    required:
    - name
    type: object
  categoryctrl.modifyCategoryRes:
    properties:
      id:
        type: string
      name:
        type: string
    type: object
  groupctrl.AffiliationDTO:
    properties:
      group_id:
        type: string
      joined_at:
        type: string
      nickname:
        example: nickname between 1 and 20
        type: string
      role:
        maximum: 2
        minimum: 0
        type: integer
      user_id:
        type: string
    required:
    - group_id
    - joined_at
    - nickname
    - role
    - user_id
    type: object
  groupctrl.createGroupReq:
    properties:
      description:
        example: description between 0 and 100
        type: string
      invite_policy:
        maximum: 2
        minimum: 0
        type: integer
      name:
        example: name between 3 and 30
        type: string
      nickname:
        example: nickname between 1 and 20
        type: string
      nickname_policy:
        example: nickname_policy between 0 and 50
        type: string
      reveal_policy:
        maximum: 2
        minimum: 0
        type: integer
    required:
    - invite_policy
    - name
    - nickname
    - reveal_policy
    type: object
  groupctrl.groupDTO:
    properties:
      create_at:
        type: string
      description:
        type: string
      id:
        type: string
      invite_policy:
        type: integer
      name:
        type: string
      nickname_policy:
        type: string
      owner_nickname:
        type: string
      reveal_policy:
        type: integer
    required:
    - create_at
    - description
    - id
    - invite_policy
    - name
    - nickname_policy
    - owner_nickname
    - reveal_policy
    type: object
  groupctrl.joinReq:
    properties:
      invite_code:
        type: string
      nickname:
        example: nickname between 1 and 20
        type: string
    required:
    - invite_code
    type: object
  groupctrl.modifyGroupReq:
    properties:
      description:
        example: description between 0 and 100
        type: string
      invite_policy:
        maximum: 2
        minimum: 0
        type: integer
      name:
        example: name between 3 and 30
        type: string
      nickname_policy:
        example: nickname_policy between 0 and 50
        type: string
      reveal_policy:
        maximum: 2
        minimum: 0
        type: integer
    required:
    - invite_policy
    - name
    - reveal_policy
    type: object
  groupctrl.modifyMemberReq:
    properties:
      nickname:
        example: nickname between 1 and 20
        type: string
      role:
        maximum: 1
        minimum: 0
        type: integer
    required:
    - nickname
    - role
    type: object
  groupctrl.modifyNicknameReq:
    properties:
      nickname:
        example: nickname between 1 and 20
        type: string
    required:
    - nickname
    type: object
  invitectrl.inviteCodeInfoRes:
    properties:
      group_description:
        type: string
      group_name:
        type: string
      group_owner_nickname:
        type: string
      nickname_policy:
        type: string
    required:
    - group_description
    - group_name
    - group_owner_nickname
    - nickname_policy
    type: object
  invitectrl.inviteGroupRes:
    properties:
      code:
        example: "1111111"
        type: string
    required:
    - code
    type: object
  studylogctrl.createStudyLogReq:
    properties:
      content:
        example: content between 0 and 30
        type: string
      end_at:
        example: "2020-08-28T09:20:26.187+09:00"
        type: string
      groups_to_share:
        example:
        - group_id
        items:
          type: string
        type: array
      start_at:
        example: "2020-08-28T09:20:26.187+09:00"
        type: string
      subject_id:
        example: subject_id
        type: string
    required:
    - content
    - end_at
    - groups_to_share
    - start_at
    - subject_id
    type: object
  studylogctrl.dailyStudyLog:
    properties:
      date:
        type: string
      log:
        items:
          $ref: '#/definitions/studylogctrl.dailySubjectLog'
        type: array
    required:
    - date
    - log
    type: object
  studylogctrl.dailySubjectLog:
    properties:
      category_id:
        type: string
      study_time:
        type: integer
      subject_id:
        type: string
    required:
    - category_id
    - study_time
    - subject_id
    type: object
  studylogctrl.groupMemberdailyStudyLog:
    properties:
      date:
        type: string
      log:
        items:
          $ref: '#/definitions/studylogctrl.groupMemberdailySubjectLog'
        type: array
    required:
    - date
    - log
    type: object
  studylogctrl.groupMemberdailySubjectLog:
    properties:
      category_id:
        type: string
      category_name:
        type: string
      study_time:
        type: integer
      subject:
        $ref: '#/definitions/subjectctrl.SubjectDTO'
    required:
    - category_id
    - category_name
    - study_time
    - subject
    type: object
  studylogctrl.groupStudyLogDTO:
    properties:
      category_id:
        type: string
      category_name:
        type: string
      content:
        type: string
      end_at:
        type: string
      id:
        type: string
      start_at:
        type: string
      subject:
        $ref: '#/definitions/subjectctrl.SubjectDTO'
    required:
    - category_id
    - category_name
    - content
    - end_at
    - id
    - start_at
    - subject
    type: object
  studylogctrl.myStudyLogDTO:
    properties:
      content:
        type: string
      end_at:
        type: string
      groups_to_share:
        items:
          type: string
        type: array
      id:
        type: string
      start_at:
        type: string
      subject_id:
        type: string
    required:
    - content
    - end_at
    - groups_to_share
    - id
    - start_at
    - subject_id
    type: object
  subjectctrl.SubjectDTO:
    properties:
      color:
        type: string
      id:
        type: string
      name:
        type: string
      order:
        minimum: 0
        type: integer
    required:
    - color
    - id
    - name
    - order
    type: object
  subjectctrl.createSubjectBatchElemReq:
    properties:
      category_id:
        type: string
      color:
        type: string
      name:
        example: name between 1 and 20
        type: string
    required:
    - category_id
    - color
    - name
    type: object
  subjectctrl.createSubjectBatchReq:
    properties:
      subject_list:
        items:
          $ref: '#/definitions/subjectctrl.createSubjectBatchElemReq'
        type: array
    required:
    - subject_list
    type: object
  subjectctrl.createSubjectReq:
    properties:
      color:
        type: string
      name:
        example: name between 1 and 20
        type: string
    required:
    - color
    - name
    type: object
  subjectctrl.modifySubjectInfoReq:
    properties:
      category_id:
        type: string
      color:
        type: string
      name:
        example: name between 1 and 20
        type: string
    required:
    - category_id
    - color
    - name
    type: object
  subjectctrl.subjectOrderElement:
    properties:
      order:
        minimum: 0
        type: integer
      subject_id:
        type: string
    required:
    - order
    - subject_id
    type: object
  timerctrl.createTimerReq:
    properties:
      content:
        example: content between 0 and 30
        type: string
      shared_group_ids:
        items:
          type: string
        type: array
      subject_id:
        type: string
    required:
    - content
    - shared_group_ids
    - subject_id
    type: object
  timerctrl.modifyTimerDTO:
    properties:
      content:
        example: content between 0 and 30
        type: string
      shared_group_ids:
        items:
          type: string
        type: array
      subject_id:
        type: string
    required:
    - content
    - shared_group_ids
    - subject_id
    type: object
  timerctrl.timerDTO:
    properties:
      content:
        type: string
      id:
        type: string
      shared_group_ids:
        items:
          type: string
        type: array
      start_at:
        type: string
      subject_id:
        type: string
    required:
    - content
    - id
    - shared_group_ids
    - start_at
    - subject_id
    type: object
  timerctrl.timerWithEdgeInfoDTO:
    properties:
      affiliation:
        $ref: '#/definitions/groupctrl.AffiliationDTO'
      content:
        type: string
      id:
        type: string
      start_at:
        type: string
      subject:
        $ref: '#/definitions/subjectctrl.SubjectDTO'
    required:
    - affiliation
    - content
    - id
    - start_at
    - subject
    type: object
  userctrl.modifyUserInfoReq:
    properties:
      name:
        example: name between 1 and 20
        type: string
      terms_agreed:
        type: boolean
    required:
    - name
    type: object
  userctrl.modifyUserInfoRes:
    properties:
      name:
        type: string
      terms_agreed:
        type: boolean
      user_id:
        type: string
    required:
    - name
    - terms_agreed
    - user_id
    type: object
  userctrl.myUserInfoRes:
    properties:
      created_at:
        type: string
      name:
        type: string
      oauth_provider:
        type: integer
      terms_agreed:
        type: boolean
      user_id:
        type: string
    required:
    - created_at
    - name
    - oauth_provider
    - terms_agreed
    - user_id
    type: object
host: localhost:3000
info:
  contact: {}
  title: Distimer Swagger API
  version: "1.0"
paths:
  /auth/logout:
    delete:
      consumes:
      - application/json
      parameters:
      - description: logoutTokenReq
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/authctrl.logoutTokenReq'
      produces:
      - application/json
      responses:
        "204":
          description: No Content
      summary: Logout
      tags:
      - Auth
  /auth/oauth/apple:
    post:
      consumes:
      - application/json
      parameters:
      - description: oauthLoginReq
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/authctrl.oauthLoginReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/authctrl.loginRes'
        "201":
          description: Created
          schema:
            $ref: '#/definitions/authctrl.loginRes'
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "409":
          description: Conflict
        "500":
          description: Internal Server Error
      summary: Apple Oauth Login
      tags:
      - Auth
  /auth/oauth/google:
    post:
      consumes:
      - application/json
      parameters:
      - description: oauthLoginReq
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/authctrl.oauthLoginReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/authctrl.loginRes'
        "201":
          description: Created
          schema:
            $ref: '#/definitions/authctrl.loginRes'
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "409":
          description: Conflict
        "500":
          description: Internal Server Error
      summary: Google Oauth Login
      tags:
      - Auth
  /auth/refresh:
    post:
      consumes:
      - application/json
      parameters:
      - description: refreshTokenReq
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/authctrl.refreshTokenReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/authctrl.refreshTokenRes'
      summary: Refresh Token
      tags:
      - Auth
  /category:
    get:
      consumes:
      - application/json
      description: '[EDGE INCLUDED!]Subject list is included in each category'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/categoryctrl.categoryDTO'
            type: array
      security:
      - Bearer: []
      summary: Get Category List
      tags:
      - Category
    post:
      consumes:
      - application/json
      parameters:
      - description: createCategoryReq
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/categoryctrl.createCategoryReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/categoryctrl.categoryDTO'
        "400":
          description: Bad Request
        "409":
          description: Conflict
        "500":
          description: Internal Server Error
      security:
      - Bearer: []
      summary: Create Category
      tags:
      - Category
  /category/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Category ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "409":
          description: Conflict
        "500":
          description: Internal Server Error
      security:
      - Bearer: []
      summary: Delete Category
      tags:
      - Category
    put:
      consumes:
      - application/json
      parameters:
      - description: Category ID
        in: path
        name: id
        required: true
        type: string
      - description: createCategoryReq
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/categoryctrl.createCategoryReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/categoryctrl.modifyCategoryRes'
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - Bearer: []
      summary: Modify Category
      tags:
      - Category
  /category/batch:
    post:
      consumes:
      - application/json
      parameters:
      - description: category data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/categoryctrl.createCategoryBatchReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/categoryctrl.categoryDTO'
            type: array
        "400":
          description: Bad Request
        "409":
          description: Conflict
        "500":
          description: Internal Server Error
      security:
      - Bearer: []
      summary: Create Batch Category
      tags:
      - Category
  /category/order:
    patch:
      consumes:
      - application/json
      parameters:
      - description: categoryOrderElement
        in: body
        name: request
        required: true
        schema:
          items:
            $ref: '#/definitions/categoryctrl.categoryOrderElement'
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/categoryctrl.categoryOrderElement'
            type: array
        "400":
          description: Bad Request
        "403":
          description: Forbidden
        "500":
          description: Internal Server Error
      security:
      - Bearer: []
      summary: Modify Category Order
      tags:
      - Category
  /group:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/groupctrl.groupDTO'
            type: array
      security:
      - Bearer: []
      summary: Get All Joined Groups
      tags:
      - Group
    post:
      consumes:
      - application/json
      parameters:
      - description: createGroupReq
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/groupctrl.createGroupReq'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/groupctrl.groupDTO'
      security:
      - Bearer: []
      summary: Create Group
      tags:
      - Group
  /group/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: group id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
      security:
      - Bearer: []
      summary: Delete Group
      tags:
      - Group
    put:
      consumes:
      - application/json
      parameters:
      - description: group id
        in: path
        name: id
        required: true
        type: string
      - description: modifyGroupReq
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/groupctrl.modifyGroupReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/groupctrl.groupDTO'
      security:
      - Bearer: []
      summary: Modify Group Info
      tags:
      - Group
  /group/join:
    post:
      consumes:
      - application/json
      parameters:
      - description: joinReq
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/groupctrl.joinReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/groupctrl.groupDTO'
      security:
      - Bearer: []
      summary: Join Group with Invite Code
      tags:
      - Group
  /group/member/{groupID}/{memberID}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: group id
        in: path
        name: groupID
        required: true
        type: string
      - description: member id
        in: path
        name: memberID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - Bearer: []
      summary: Expel Member
      tags:
      - Group
    put:
      consumes:
      - application/json
      parameters:
      - description: group id
        in: path
        name: groupID
        required: true
        type: string
      - description: member id
        in: path
        name: memberID
        required: true
        type: string
      - description: modifyMemberReq
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/groupctrl.modifyMemberReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/groupctrl.AffiliationDTO'
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - Bearer: []
      summary: Modify Member
      tags:
      - Group
  /group/member/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: group id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/groupctrl.AffiliationDTO'
            type: array
      security:
      - Bearer: []
      summary: Get All Group Members
      tags:
      - Group
  /group/nickname/{id}:
    patch:
      consumes:
      - application/json
      parameters:
      - description: group id
        in: path
        name: id
        required: true
        type: string
      - description: modifyNicknameReq
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/groupctrl.modifyNicknameReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/groupctrl.AffiliationDTO'
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - Bearer: []
      summary: Modify Nickname
      tags:
      - Group
  /group/quit/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: group id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - Bearer: []
      summary: Quit Group
      tags:
      - Group
  /invite/{code}:
    get:
      consumes:
      - application/json
      parameters:
      - description: invite code
        in: path
        name: code
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/invitectrl.inviteCodeInfoRes'
      security:
      - Bearer: []
      summary: Get Invite Code Info
      tags:
      - Invite
  /invite/group/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: group id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              type: string
            type: array
      security:
      - Bearer: []
      summary: Get Invite Code List
      tags:
      - Invite
    post:
      consumes:
      - application/json
      parameters:
      - description: group id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/invitectrl.inviteGroupRes'
      security:
      - Bearer: []
      summary: Invite to Group
      tags:
      - Invite
  /invite/group/{id}/{code}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: group id
        in: path
        name: id
        required: true
        type: string
      - description: invite code
        in: path
        name: code
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
      security:
      - Bearer: []
      summary: Delete Invite Code
      tags:
      - Invite
  /studylog:
    get:
      consumes:
      - application/json
      parameters:
      - description: count
        in: query
        name: count
        required: true
        type: integer
      - description: offset
        in: query
        name: offset
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/studylogctrl.myStudyLogDTO'
            type: array
      security:
      - Bearer: []
      summary: Get All My Study Logs
      tags:
      - StudyLog
    post:
      consumes:
      - application/json
      parameters:
      - description: createStudyLogReq
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/studylogctrl.createStudyLogReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/studylogctrl.myStudyLogDTO'
        "400":
          description: Bad Request
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "409":
          description: Conflict
        "500":
          description: Internal Server Error
      security:
      - Bearer: []
      summary: Create Study Log
      tags:
      - StudyLog
  /studylog/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: studylog id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - Bearer: []
      summary: Delete StudyLog
      tags:
      - StudyLog
    put:
      consumes:
      - application/json
      parameters:
      - description: studylog id
        in: path
        name: id
        required: true
        type: string
      - description: createStudyLogReq
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/studylogctrl.createStudyLogReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/studylogctrl.createStudyLogReq'
        "400":
          description: Bad Request
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "409":
          description: Conflict
        "500":
          description: Internal Server Error
      security:
      - Bearer: []
      summary: Modify Study Log
      tags:
      - StudyLog
  /studylog/date:
    get:
      consumes:
      - application/json
      parameters:
      - description: "2006-01-02"
        in: query
        name: date
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/studylogctrl.myStudyLogDTO'
            type: array
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      security:
      - Bearer: []
      summary: Get StudyLog by Date
      tags:
      - StudyLog
  /studylog/detail/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: studylog id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/studylogctrl.myStudyLogDTO'
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - Bearer: []
      summary: Get StudyLog Detail by ID
      tags:
      - StudyLog
  /studylog/group/statistics/term/{group_id}/{member_id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: "2006-01-02"
        in: query
        name: start_date
        required: true
        type: string
      - description: "2006-01-03"
        in: query
        name: end_date
        required: true
        type: string
      - description: group_id
        in: path
        name: group_id
        required: true
        type: string
      - description: member_id
        in: path
        name: member_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/studylogctrl.groupMemberdailyStudyLog'
            type: array
        "400":
          description: Bad Request
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - Bearer: []
      summary: Get Statistics with Term
      tags:
      - StudyLog
  /studylog/group/term/{group_id}/{member_id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: group id
        in: path
        name: group_id
        required: true
        type: string
      - description: member id
        in: path
        name: member_id
        required: true
        type: string
      - description: "2006-01-02"
        in: query
        name: start_date
        required: true
        type: string
      - description: "2006-01-03"
        in: query
        name: end_date
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/studylogctrl.groupStudyLogDTO'
            type: array
        "400":
          description: Bad Request
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - Bearer: []
      summary: Get StudyLogs with Term with Group
      tags:
      - StudyLog
  /studylog/statistics/date:
    get:
      consumes:
      - application/json
      parameters:
      - description: "2006-01-02"
        in: query
        name: date
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/studylogctrl.dailySubjectLog'
            type: array
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      security:
      - Bearer: []
      summary: Get statistics of study logs with date
      tags:
      - StudyLog
  /studylog/statistics/term:
    get:
      consumes:
      - application/json
      parameters:
      - description: "2006-01-02"
        in: query
        name: start_date
        required: true
        type: string
      - description: "2006-01-03"
        in: query
        name: end_date
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/studylogctrl.dailyStudyLog'
            type: array
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      security:
      - Bearer: []
      summary: Get Statistics with Term
      tags:
      - StudyLog
  /studylog/subject/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: Subject ID
        in: path
        name: id
        required: true
        type: string
      - description: count
        in: query
        name: count
        required: true
        type: integer
      - description: offset
        in: query
        name: offset
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/studylogctrl.myStudyLogDTO'
            type: array
      security:
      - Bearer: []
      summary: Get Study Log with Subject
      tags:
      - StudyLog
  /studylog/term:
    get:
      consumes:
      - application/json
      parameters:
      - description: "2006-01-02"
        in: query
        name: start_date
        required: true
        type: string
      - description: "2006-01-03"
        in: query
        name: end_date
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/studylogctrl.myStudyLogDTO'
            type: array
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      security:
      - Bearer: []
      summary: Get StudyLogs with Term
      tags:
      - StudyLog
  /subject/{id}:
    delete:
      parameters:
      - description: Subject ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - Bearer: []
      summary: Delete Subject
      tags:
      - Subject
    post:
      consumes:
      - application/json
      parameters:
      - description: Category ID
        in: path
        name: id
        required: true
        type: string
      - description: createSubjectReq
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/subjectctrl.createSubjectReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/subjectctrl.SubjectDTO'
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "409":
          description: Conflict
        "500":
          description: Internal Server Error
      security:
      - Bearer: []
      summary: Create Subject
      tags:
      - Subject
    put:
      consumes:
      - application/json
      parameters:
      - description: Subject ID
        in: path
        name: id
        required: true
        type: string
      - description: modifySubjectInfoReq
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/subjectctrl.modifySubjectInfoReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/subjectctrl.SubjectDTO'
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - Bearer: []
      summary: Modify Subject Info
      tags:
      - Subject
  /subject/batch:
    post:
      consumes:
      - application/json
      parameters:
      - description: subject data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/subjectctrl.createSubjectBatchReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/subjectctrl.SubjectDTO'
            type: array
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "409":
          description: Conflict
        "500":
          description: Internal Server Error
      security:
      - Bearer: []
      summary: Create Batch Subject
      tags:
      - Subject
  /subject/order:
    patch:
      consumes:
      - application/json
      parameters:
      - description: subjectOrderElement
        in: body
        name: request
        required: true
        schema:
          items:
            $ref: '#/definitions/subjectctrl.subjectOrderElement'
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/subjectctrl.subjectOrderElement'
            type: array
        "400":
          description: Bad Request
        "403":
          description: Forbidden
        "500":
          description: Internal Server Error
      security:
      - Bearer: []
      summary: Modify Subject Order
      tags:
      - Subject
  /timer:
    delete:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - Bearer: []
      summary: Delete the timer of the user
      tags:
      - Timer
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/timerctrl.timerDTO'
        "204":
          description: No Content
        "500":
          description: Internal Server Error
      security:
      - Bearer: []
      summary: Get My Timer Info
      tags:
      - Timer
    post:
      consumes:
      - application/json
      parameters:
      - description: createTimerReq
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/timerctrl.createTimerReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/timerctrl.timerDTO'
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "409":
          description: Conflict
        "500":
          description: Internal Server Error
      security:
      - Bearer: []
      summary: Create Timer
      tags:
      - Timer
    put:
      consumes:
      - application/json
      parameters:
      - description: modifyTimerDTO
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/timerctrl.modifyTimerDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/timerctrl.timerDTO'
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - Bearer: []
      summary: Modify Timer
      tags:
      - Timer
  /timer/group/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: Group ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/timerctrl.timerWithEdgeInfoDTO'
            type: array
        "400":
          description: Bad Request
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - Bearer: []
      summary: Get Timer by Group
      tags:
      - Timer
  /user:
    delete:
      responses:
        "204":
          description: No Content
        "409":
          description: Conflict
        "500":
          description: Internal Server Error
      security:
      - Bearer: []
      summary: Quit Service
      tags:
      - User
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/userctrl.myUserInfoRes'
      security:
      - Bearer: []
      summary: Get My User Info
      tags:
      - User
    put:
      consumes:
      - application/json
      parameters:
      - description: modifyUserInfoReq
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/userctrl.modifyUserInfoReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/userctrl.modifyUserInfoRes'
      security:
      - Bearer: []
      summary: Modify User Info
      tags:
      - User
securityDefinitions:
  Bearer:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
