// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// AffiliationsColumns holds the columns for the "affiliations" table.
	AffiliationsColumns = []*schema.Column{
		{Name: "nickname", Type: field.TypeString},
		{Name: "role", Type: field.TypeInt8},
		{Name: "joined_at", Type: field.TypeTime},
		{Name: "user_id", Type: field.TypeUUID},
		{Name: "group_id", Type: field.TypeUUID},
	}
	// AffiliationsTable holds the schema information for the "affiliations" table.
	AffiliationsTable = &schema.Table{
		Name:       "affiliations",
		Columns:    AffiliationsColumns,
		PrimaryKey: []*schema.Column{AffiliationsColumns[3], AffiliationsColumns[4]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "affiliations_users_user",
				Columns:    []*schema.Column{AffiliationsColumns[3]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "affiliations_groups_group",
				Columns:    []*schema.Column{AffiliationsColumns[4]},
				RefColumns: []*schema.Column{GroupsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// GroupsColumns holds the columns for the "groups" table.
	GroupsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID, Unique: true},
		{Name: "name", Type: field.TypeString},
		{Name: "description", Type: field.TypeString, Default: ""},
		{Name: "nickname_policy", Type: field.TypeString, Default: ""},
		{Name: "reveal_policy", Type: field.TypeInt8},
		{Name: "invite_policy", Type: field.TypeInt8},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "user_owned_groups", Type: field.TypeUUID},
	}
	// GroupsTable holds the schema information for the "groups" table.
	GroupsTable = &schema.Table{
		Name:       "groups",
		Columns:    GroupsColumns,
		PrimaryKey: []*schema.Column{GroupsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "groups_users_owned_groups",
				Columns:    []*schema.Column{GroupsColumns[7]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// InviteCodesColumns holds the columns for the "invite_codes" table.
	InviteCodesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "code", Type: field.TypeString, Unique: true},
		{Name: "used", Type: field.TypeBool, Default: false},
		{Name: "group_invite_codes", Type: field.TypeUUID},
	}
	// InviteCodesTable holds the schema information for the "invite_codes" table.
	InviteCodesTable = &schema.Table{
		Name:       "invite_codes",
		Columns:    InviteCodesColumns,
		PrimaryKey: []*schema.Column{InviteCodesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "invite_codes_groups_invite_codes",
				Columns:    []*schema.Column{InviteCodesColumns[3]},
				RefColumns: []*schema.Column{GroupsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// RefreshTokensColumns holds the columns for the "refresh_tokens" table.
	RefreshTokensColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID, Unique: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "user_refresh_tokens", Type: field.TypeUUID, Nullable: true},
	}
	// RefreshTokensTable holds the schema information for the "refresh_tokens" table.
	RefreshTokensTable = &schema.Table{
		Name:       "refresh_tokens",
		Columns:    RefreshTokensColumns,
		PrimaryKey: []*schema.Column{RefreshTokensColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "refresh_tokens_users_refresh_tokens",
				Columns:    []*schema.Column{RefreshTokensColumns[2]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// StudyLogsColumns holds the columns for the "study_logs" table.
	StudyLogsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID, Unique: true},
		{Name: "start_at", Type: field.TypeTime},
		{Name: "end_at", Type: field.TypeTime},
		{Name: "content", Type: field.TypeString},
		{Name: "user_study_logs", Type: field.TypeUUID, Nullable: true},
	}
	// StudyLogsTable holds the schema information for the "study_logs" table.
	StudyLogsTable = &schema.Table{
		Name:       "study_logs",
		Columns:    StudyLogsColumns,
		PrimaryKey: []*schema.Column{StudyLogsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "study_logs_users_study_logs",
				Columns:    []*schema.Column{StudyLogsColumns[4]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID, Unique: true},
		{Name: "name", Type: field.TypeString, Default: "User"},
		{Name: "oauth_id", Type: field.TypeString},
		{Name: "oauth_provider", Type: field.TypeInt8},
		{Name: "created_at", Type: field.TypeTime},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
	}
	// StudyLogSharedGroupColumns holds the columns for the "study_log_shared_group" table.
	StudyLogSharedGroupColumns = []*schema.Column{
		{Name: "study_log_id", Type: field.TypeUUID},
		{Name: "group_id", Type: field.TypeUUID},
	}
	// StudyLogSharedGroupTable holds the schema information for the "study_log_shared_group" table.
	StudyLogSharedGroupTable = &schema.Table{
		Name:       "study_log_shared_group",
		Columns:    StudyLogSharedGroupColumns,
		PrimaryKey: []*schema.Column{StudyLogSharedGroupColumns[0], StudyLogSharedGroupColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "study_log_shared_group_study_log_id",
				Columns:    []*schema.Column{StudyLogSharedGroupColumns[0]},
				RefColumns: []*schema.Column{StudyLogsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "study_log_shared_group_group_id",
				Columns:    []*schema.Column{StudyLogSharedGroupColumns[1]},
				RefColumns: []*schema.Column{GroupsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		AffiliationsTable,
		GroupsTable,
		InviteCodesTable,
		RefreshTokensTable,
		StudyLogsTable,
		UsersTable,
		StudyLogSharedGroupTable,
	}
)

func init() {
	AffiliationsTable.ForeignKeys[0].RefTable = UsersTable
	AffiliationsTable.ForeignKeys[1].RefTable = GroupsTable
	GroupsTable.ForeignKeys[0].RefTable = UsersTable
	InviteCodesTable.ForeignKeys[0].RefTable = GroupsTable
	RefreshTokensTable.ForeignKeys[0].RefTable = UsersTable
	StudyLogsTable.ForeignKeys[0].RefTable = UsersTable
	StudyLogSharedGroupTable.ForeignKeys[0].RefTable = StudyLogsTable
	StudyLogSharedGroupTable.ForeignKeys[1].RefTable = GroupsTable
}
