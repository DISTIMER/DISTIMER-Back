// Code generated by ent, DO NOT EDIT.

package ent

import (
	"time"

	"github.com/google/uuid"
	"pentag.kr/distimer/ent/affiliation"
	"pentag.kr/distimer/ent/group"
	"pentag.kr/distimer/ent/invitecode"
	"pentag.kr/distimer/ent/refreshtoken"
	"pentag.kr/distimer/ent/schema"
	"pentag.kr/distimer/ent/studylog"
	"pentag.kr/distimer/ent/user"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	affiliationFields := schema.Affiliation{}.Fields()
	_ = affiliationFields
	// affiliationDescJoinedAt is the schema descriptor for joined_at field.
	affiliationDescJoinedAt := affiliationFields[4].Descriptor()
	// affiliation.DefaultJoinedAt holds the default value on creation for the joined_at field.
	affiliation.DefaultJoinedAt = affiliationDescJoinedAt.Default.(func() time.Time)
	groupFields := schema.Group{}.Fields()
	_ = groupFields
	// groupDescDescription is the schema descriptor for description field.
	groupDescDescription := groupFields[2].Descriptor()
	// group.DefaultDescription holds the default value on creation for the description field.
	group.DefaultDescription = groupDescDescription.Default.(string)
	// groupDescNicknamePolicy is the schema descriptor for nickname_policy field.
	groupDescNicknamePolicy := groupFields[3].Descriptor()
	// group.DefaultNicknamePolicy holds the default value on creation for the nickname_policy field.
	group.DefaultNicknamePolicy = groupDescNicknamePolicy.Default.(string)
	// groupDescCreatedAt is the schema descriptor for created_at field.
	groupDescCreatedAt := groupFields[6].Descriptor()
	// group.DefaultCreatedAt holds the default value on creation for the created_at field.
	group.DefaultCreatedAt = groupDescCreatedAt.Default.(func() time.Time)
	// groupDescID is the schema descriptor for id field.
	groupDescID := groupFields[0].Descriptor()
	// group.DefaultID holds the default value on creation for the id field.
	group.DefaultID = groupDescID.Default.(func() uuid.UUID)
	invitecodeFields := schema.InviteCode{}.Fields()
	_ = invitecodeFields
	// invitecodeDescUsed is the schema descriptor for used field.
	invitecodeDescUsed := invitecodeFields[1].Descriptor()
	// invitecode.DefaultUsed holds the default value on creation for the used field.
	invitecode.DefaultUsed = invitecodeDescUsed.Default.(int32)
	refreshtokenFields := schema.RefreshToken{}.Fields()
	_ = refreshtokenFields
	// refreshtokenDescCreatedAt is the schema descriptor for created_at field.
	refreshtokenDescCreatedAt := refreshtokenFields[1].Descriptor()
	// refreshtoken.DefaultCreatedAt holds the default value on creation for the created_at field.
	refreshtoken.DefaultCreatedAt = refreshtokenDescCreatedAt.Default.(func() time.Time)
	studylogFields := schema.StudyLog{}.Fields()
	_ = studylogFields
	// studylogDescID is the schema descriptor for id field.
	studylogDescID := studylogFields[0].Descriptor()
	// studylog.DefaultID holds the default value on creation for the id field.
	studylog.DefaultID = studylogDescID.Default.(func() uuid.UUID)
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescName is the schema descriptor for name field.
	userDescName := userFields[1].Descriptor()
	// user.DefaultName holds the default value on creation for the name field.
	user.DefaultName = userDescName.Default.(string)
	// userDescCreatedAt is the schema descriptor for created_at field.
	userDescCreatedAt := userFields[4].Descriptor()
	// user.DefaultCreatedAt holds the default value on creation for the created_at field.
	user.DefaultCreatedAt = userDescCreatedAt.Default.(func() time.Time)
}
