// Code generated by ent, DO NOT EDIT.

package deleteduser

import (
	"entgo.io/ent/dialect/sql"
)

const (
	// Label holds the string label denoting the deleteduser type in the database.
	Label = "deleted_user"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldOauthID holds the string denoting the oauth_id field in the database.
	FieldOauthID = "oauth_id"
	// FieldOauthProvider holds the string denoting the oauth_provider field in the database.
	FieldOauthProvider = "oauth_provider"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// Table holds the table name of the deleteduser in the database.
	Table = "deleted_users"
)

// Columns holds all SQL columns for deleteduser fields.
var Columns = []string{
	FieldID,
	FieldName,
	FieldOauthID,
	FieldOauthProvider,
	FieldCreatedAt,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

// OrderOption defines the ordering options for the DeletedUser queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByName orders the results by the name field.
func ByName(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldName, opts...).ToFunc()
}

// ByOauthID orders the results by the oauth_id field.
func ByOauthID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldOauthID, opts...).ToFunc()
}

// ByOauthProvider orders the results by the oauth_provider field.
func ByOauthProvider(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldOauthProvider, opts...).ToFunc()
}

// ByCreatedAt orders the results by the created_at field.
func ByCreatedAt(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldCreatedAt, opts...).ToFunc()
}
